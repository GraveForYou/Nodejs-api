{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Shop api",
        "description": "My User Project Application API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }

    },
    "schemes": ["http"],
    "servers": [{
            "url": "http://localhost:3002/"
        },
        {
            "url": "http://localhost:3002/swagger/"
        }
    ],
    "tags": [{
            "name": "Users",
            "description": "API for users in the system"
        },
        {
            "name": "Products",
            "description": "API for products in the system"
        },
        {
            "name": "Orders",
            "description": "API for Orders in the system"
        }
    ],
    "consumes": ["application/json", "application/xml"],
    "produces": ["application/json", "application/xml"],

    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": ["Users"],
                "description": "Create new user in system",
                "requestBody": {
                    "name": "user",
                    "in": "body",
                    "description": "User that we want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["name", "email", "password", "role"],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "avatar": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                },
                "responses": {
                    "201": {
                        "description": "Successfully created a new user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": ["Users"],
                "description": "User login in system",
                "requestBody": {
                    "description": "User want login in system",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email", "password"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "haianh@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123"
                                    }
                                }
                            }
                        }

                    }
                },
                "responses": {
                    "200": {
                        "description": "User login in system",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }

                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": ["Users"],
                "summary": "Get all users in system",
                "parameters": [{
                        "name": "page",
                        "in": "query",
                        "description": "page number to return",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "search product name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/users/me": {
            "get": {
                "tags": ["Users"],
                "summary": "users get their own information",
                "description": "returns the user's own information",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": " Invalid ID supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": ["Users"],
                "summary": "Find user by ID",
                "description": "Returns a single user",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user to return",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "description: Invalid ID supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/users/me/update": {
            "put": {
                "tags": ["Users"],
                "summary": "Update user By id with user login",
                "description": "Update user by user login",
                "requestBody": {
                    "description": "Enter information to update user !",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "avatar": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "role": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "update user successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Use aren't authentication!",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]

            }
        },
        "/api/users/{id}/update": {
            "put": {
                "tags": ["Users"],
                "summary": "Update user By id (admin)",
                "description": "Update user by id (admin)",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Id of the user to update",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "description": "Enter information to update user with above Id!",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "avatar": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "role": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "update user successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "description: Invalid ID supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]

            }
        },
        "/api/users/{id}/destroy": {
            "delete": {
                "tags": ["Users"],
                "summary": "Delete user by ID",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user to delete",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "description: Invalid ID supplied",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized!",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/products": {
            "get": {
                "tags": ["Products"],
                "summary": "Get all products",
                "parameters": [{
                        "name": "page",
                        "in": "query",
                        "description": "page number to return",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name to search product name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "$ref": "#/components/Products"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/Products"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!",
                        "content": {}
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {}
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": ["Products"],
                "summary": "Get Product By id",
                "description": "Get Product by id",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Id of the Product to get",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],

                "responses": {
                    "200": {
                        "description": "get product successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized!",
                        "content": {}
                    },
                    "404": {
                        "description": "product not found",
                        "content": {}
                    }
                }
            }
        },
        "/api/products/new": {
            "post": {
                "tags": ["Products"],
                "description": "Create new product in system",
                "requestBody": {
                    "name": "product",
                    "in": "body",
                    "description": "Product that we want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created a new product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/products/{id}/update": {
            "put": {
                "tags": ["Products"],
                "summary": "Update Product By id (admin)",
                "description": "Update Product by id (admin)",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Id of the Product to update",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "description": "Enter information to update product with above Id!",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "update product successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "description: Invalid ID supplied",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized!",
                        "content": {}
                    },
                    "404": {
                        "description": "product not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]

            }
        },
        "/api/products/trashes": {
            "get": {
                "tags": ["Products"],
                "summary": "Get products has been soft deleted",
                "parameters": [{
                        "name": "page",
                        "in": "query",
                        "description": "page number to return",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name to search product name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "$ref": "#/components/Products"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/Products"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!",
                        "content": {}
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/products/{id}/soft": {
            "delete": {
                "tags": ["Products"],
                "summary": "soft delete product by id (admin)",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "Id of the Product to soft delete!",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized!",
                        "content": {}
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/products/trashes/{id}/force": {
            "delete": {
                "tags": ["Products"],
                "summary": "force delete product by id (admin)",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "Id of the Product to force delete!",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized!",
                        "content": {}
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/products/trashes/{id}/restore": {
            "patch": {
                "tags": ["Products"],
                "summary": "restore product by id (admin)",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "Id of the Product to restore!",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized!",
                        "content": {}
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/orders/newOrder": {
            "post": {
                "tags": ["Orders"],
                "description": "Create new product in system",
                "requestBody": {
                    "name": "Order",
                    "in": "body",
                    "description": "Order that we want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "shipping_info": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "string",
                                                    "example": "Chuong My"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Ha Noi"
                                                },
                                                "phoneNumber": {
                                                    "type": "number",
                                                    "default": "0123456789"
                                                }
                                            }
                                        }
                                    },
                                    "orderItems": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "product": {
                                                    "type": "string",
                                                    "example": "61dfe049e07276382098f50e"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "product2"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": "22000"
                                                },
                                                "quantity": {
                                                    "type": "number",
                                                    "example": "2"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "image2-1"
                                                },
                                                "size": {
                                                    "type": "string",
                                                    "example": "40"
                                                },
                                                "color": {
                                                    "type": "string",
                                                    "example": "white"
                                                }
                                            }
                                        }
                                    },
                                    "paymentMethod": {
                                        "type": "string",
                                        "default": "Payment on delivery"
                                    },
                                    "taxPrice": {
                                        "type": "number",
                                        "default": "1000"
                                    },
                                    "shippingPrice": {
                                        "type": "number",
                                        "default": "20000"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created a new order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!"
                    },
                    "401": {
                        "description": "Unauthorized!"
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/orders": {
            "get": {
                "tags": ["Orders"],
                "summary": "Find all orders",
                "description": "Get all orders",
                "parameters": [{
                    "name": "orderStatus",
                    "in": "query",
                    "description": "find order by orderStatus",
                    "style": "form",
                    "explode": true,
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "Processing",
                            "enum": ["Processing", "Confirmed", "Shipping", "Delivered"]
                        }
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "page number to return",
                    "schema": {
                        "type": "number"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "get all Orders successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized!",
                        "content": {}
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/orders/me": {
            "get": {
                "tags": ["Orders"],
                "summary": "Find all orders of user login",
                "description": "Get all orders of user login",
                "parameters": [{
                    "name": "orderStatus",
                    "in": "query",
                    "description": "find order by orderStatus",
                    "style": "form",
                    "explode": true,
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "Processing",
                            "enum": ["Processing", "Confirmed", "Shipping", "Delivered"]
                        }
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "page number to return",
                    "schema": {
                        "type": "number"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "get all Orders successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/Orders"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/Orders"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized!",
                        "content": {}
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": ["Orders"],
                "summary": "Find order by id",
                "description": "Ge order by id",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Id of the Order to get",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "get Order successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request!",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized!",
                        "content": {}
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]
            }
        },
        "/api/orders/{id}/updateOrderStatus": {
            "put": {
                "tags": ["Orders"],
                "summary": "Update Order status By id (admin)",
                "description": "Update Order status by id (admin)",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Id of the Order to update status",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "description": "Enter information to update Order status with above Id!",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "orderStatus": {
                                        "type": "array",
                                        "example": "Processing",
                                        "enum": ["Processing", "Confirmed", "Shipping", "Delivered"]
                                    }
                                }

                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "update Order status successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "description: Invalid ID supplied",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized!",
                        "content": {}
                    },
                    "404": {
                        "description": "product not found",
                        "content": {}
                    }
                },
                "security": [{
                    "bearerAuth": []
                }]

            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "required": ["name", "email", "password", "role"],
                "properties": {
                    "email": {
                        "type": "string",
                        "uniqueItems": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "role": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "Product": {
                "required": ["name", "description", "price", "category"],
                "properties": {
                    "name": {
                        "type": "string",
                        "trim": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "maxLength": 9
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "category": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string",
                        "ref": "#/components/User"
                    },
                    "stock": {
                        "type": "number",
                        "default": 10
                    },
                    "genders": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "properties": {
                                "type": "string"
                            }
                        }
                    },
                    "colors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "properties": {
                                "type": "string"
                            }
                        }
                    },
                    "sizes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "properties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "Order": {
                "properties": {
                    "shipping_info": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "address": {
                                    "type": "string"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "phoneNumber": {
                                    "type": "number",
                                    "default": "0123456789"
                                }
                            }
                        }
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "number"
                                },
                                "quantity": {
                                    "type": "number"
                                },
                                "image": {
                                    "type": "string"
                                },
                                "size": {
                                    "type": "string"
                                },
                                "color": {
                                    "type": "string"
                                },
                                "product": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "user": {
                        "type": "string"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "default": "Payment on delivery"
                    },
                    "itemsPrice": {
                        "type": "number"
                    },
                    "taxPrice": {
                        "type": "number"
                    },
                    "shippingPrice": {
                        "type": "number"
                    },
                    "totalPrice": {
                        "type": "number"
                    },
                    "orderStatus": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "pattern": "^\\d{3}-\\d{2}-\\d{4}$"
                    },
                    "expected_deliveredAt": {
                        "type": "string",
                        "pattern": "^\\d{3}-\\d{2}-\\d{4}$"
                    },
                    "canceledAt": {
                        "type": "string",
                        "pattern": "^\\d{3}-\\d{2}-\\d{4}$"
                    },
                    "deliveredAt": {
                        "type": "string",
                        "pattern": "^\\d{3}-\\d{2}-\\d{4}$"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "description": "Bearer <token>",
                "type": "apiKey",
                "name": "authorization",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "Users": {
            "type": "array",
            "$ref": "#/components/schemas/User"
        },
        "Products": {
            "type": "array",
            "$ref": "#/components/schemas/Product"
        },
        "Orders": {
            "type": "array",
            "$ref": "#/components/schemas/Order"
        },
        "orderStatus": {
            "type": "string",
            "description": "Order Status",
            "example": "Shipping",
            "enum": ["Processing", "Confirmed", "Shipping", "Delivered"]
        }
    }
}